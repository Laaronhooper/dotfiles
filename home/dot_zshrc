# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block, everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# If you come from bash you might have to change your $PATH.
export PATH=/Users/lukehooper/.local/bin:$PATH
#Mysql export
export PATH=/usr/local/mysql/bin:$PATH
# Load before oh-my-zsh
fpath+=${ZSH_CUSTOM}/plugins/zsh-completions/src


# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh

# Source files
source ~/.aliases
source ~/.options
source ~/z/z.sh

ZSH_THEME="powerlevel10k/powerlevel10k"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="yyyy-mm-dd"

ZSH_DISABLE_COMPFIX=true

plugins=(
  per-directory-history
  # vi-mode
  zsh-autosuggestions
  zsh-syntax-highlighting
)

source $ZSH/oh-my-zsh.sh

# User configuration

PROMPT="%{$fg[white]%}%n@%{$fg[green]%}%m%{$reset_color%} ${PROMPT}"

export RIPGREP_CONFIG_PATH=~/.config/ripgrep/config

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# zshaddhistory() {
#   # $? contains the exit status of the last command; Commands with exit status 127 have "command not found" error in Zsh
#   if [[ $? -eq 127 ]]; then
#     return 1  # Don't add to history
#   else
#     return 0  # Add to history
#   fi
# }

github-cd() {
	local dir="${HOME}/src/github.com/$1"
	cd "${dir}"
}

github-clone-cd() {
	local prefix=https://github.com/
	if [ "$1" = "--ssh" ]; then
		prefix=git@github.com:
		shift
	fi
	local dir="${HOME}/src/github.com/$1"
	if [ ! -d "${dir}" ]; then
		git clone "${prefix}$1.git" "${dir}"
	fi
	cd "${dir}"
}

github-clone-code() {
	local prefix=https://github.com/
	if [ "$1" = "--ssh" ]; then
		prefix=git@github.com:
		shift
	fi
	local dir="${HOME}/src/github.com/$1"
	if [ ! -d "${dir}" ]; then
		git clone "${prefix}$1.git" "${dir}"
	fi
	code "${dir}"
}

# NVM
export NVM_DIR="$HOME/.nvm"
  [ -s "/opt/homebrew/opt/nvm/nvm.sh" ] && \. "/opt/homebrew/opt/nvm/nvm.sh"  # This loads nvm
  [ -s "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm" ] && \. "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm"  # This loads nvm bash_completion

# pnpm
export PNPM_HOME="/Users/lukehooper/Library/pnpm"
case ":$PATH:" in
  *":$PNPM_HOME:"*) ;;
  *) export PATH="$PNPM_HOME:$PATH" ;;
esac

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/Users/lukehooper/mambaforge/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/Users/lukehooper/mambaforge/etc/profile.d/conda.sh" ]; then
        . "/Users/lukehooper/mambaforge/etc/profile.d/conda.sh"
    else
        export PATH="/Users/lukehooper/mambaforge/bin:$PATH"
    fi
fi
unset __conda_setup

if [ -f "/Users/lukehooper/mambaforge/etc/profile.d/mamba.sh" ]; then
    . "/Users/lukehooper/mambaforge/etc/profile.d/mamba.sh"
fi
# <<< conda initialize <<<

# Haskell initialize
[ -f "/Users/lukehooper/.ghcup/env" ] && source "/Users/lukehooper/.ghcup/env" # ghcup-env

